// GraphQL API type definitions - these would normally be generated by Amplify
// Creating stubs for now to fix TypeScript errors

// Export type aliases for sync services
export type Business = any;
export type Category = any;
export type Customer = any;
export type Employee = any;
export type Product = any;
export type Order = any;
export type OrderItem = any;

export const queries = {
  listBusinesses: '',
  listCategories: '',
  listCustomers: '',
  listEmployees: '',
  listProducts: '',
  listOrders: '',
  listOrderItems: ''
};

export const mutations = {
  createBusiness: '',
  updateBusiness: '',
  deleteBusiness: '',
  createCategory: '',
  updateCategory: '',
  deleteCategory: '',
  createCustomer: '',
  updateCustomer: '',
  deleteCustomer: '',
  createEmployee: '',
  updateEmployee: '',
  deleteEmployee: '',
  createProduct: '',
  updateProduct: '',
  deleteProduct: '',
  createOrder: '',
  updateOrder: '',
  deleteOrder: '',
  createOrderItem: '',
  updateOrderItem: '',
  deleteOrderItem: ''
};

// Type definitions for GraphQL operations
export interface ListBusinessesQuery {
  listBusinesses: {
    items: any[];
    nextToken?: string;
  };
}

export interface ListCategoriesQuery {
  listCategories: {
    items: any[];
    nextToken?: string;
  };
}

export interface ListCustomersQuery {
  listCustomers: {
    items: any[];
    nextToken?: string;
  };
}

export interface ListEmployeesQuery {
  listEmployees: {
    items: any[];
    nextToken?: string;
  };
}

export interface ListProductsQuery {
  listProducts: {
    items: any[];
    nextToken?: string;
  };
}

export interface ListOrdersQuery {
  listOrders: {
    items: any[];
    nextToken?: string;
  };
}

export interface ListOrderItemsQuery {
  listOrderItems: {
    items: any[];
    nextToken?: string;
  };
}